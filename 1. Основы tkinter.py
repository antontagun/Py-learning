# GUI - graphical user interface - графический пользовательский интерфейс (стандартный калькулятор, paint,
# редактор PyCharm и т.п.)

# Каркас графического приложения
# 1) Графический интерфейс
#   1. Главное окно (main frame, frame)
#   2. Виджеты (объекты), определение их состояние и способов размещения на главном окне
#   3. События и обработчики этих событий (например, нажали на цифру 8 - вывели ее на экран)
#   4. Цикл обработки событий

# 2) Логика приложения (различные вычисления, конвертации и т.п.)

from tkinter import *

# 1. Главное окно (main frame)
frame = Tk()  # Tk() - это основной класс tkinter, объектом которого и является main frame
#! Точка (0, 0) находится в верхнем левом углу экрана
frame.geometry('300x300+700+300')

# 2. Виджеты (объекты), определение их состояние и способов размещения на главном окне
# master -> master object (владелец объекта)
# создаем кнопки
# если не задана ширина, то ширина виджета зависит от контента (от содержимого)
but1 = Button(frame, text='Вставить', bg='red', fg='blue')  #
but1.pack()  # размещаем кнопку на фрейме

but2 = Button(frame, text='Удалить', bg='orange', fg='purple')  #
but2.pack()  # размещаем кнопку на фрейме

# создаем однострочное текстовое поле
entry = Entry(width=20)  # width -> видимая ширина поля
entry.pack()

# создаем метку
label = Label(width=20, bg='lightblue')
label.pack()

def insert(event):  # event -> обязательный параметр для связки с bind, даже если мы его явно не используем
    s = entry.get()  # получаем текст из entry
    label['text'] = s  # помещаем в label данные из s
    entry.delete(0, END)  # удаляем данные от символа с нулевым индексом до конца текстового поля

def delete(e):
    label.config(text='')  # тоже самое: label['text'] = '' -> очищаем label

#3. События и обработчики этих событий (например, нажали на цифру 8 - вывели ее на экран)
but1.bind('<Button-1>', insert)  # <Button-1> -> событие: нажатие на левую кнопку мыши (ЛКМ)
but2.bind('<Button-1>', delete)  # <Button-1> -> событие: нажатие на левую кнопку мыши (ЛКМ)

mainloop()  # главный цикл обработки событий